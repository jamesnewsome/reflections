What happens when you initialize a repository? Why do you need to do it?

	When you initialize a repository, your creating the objects that git uses to track changes in commits to the files. 

How is the staging area different from the working directory and the repository? What value do you think it offers?

	The staging area works as an intermediate area between the working directory and the repository. It appears to be useful as it allows the user to decide when something should be committed to the repository. 

How can you use the staging area to make sure you have one commit per logical change?

	You can see what changes there are. At that point you can choose which files to commit. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	
	Branches can be helful when you want to be able to try out new versions of your code while still be able to work on the orginial version. 

How do the diagrams help you visualize the branch structure?
	
	Diagrams allow you to see where there are differences in your code base, related to branches. 

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	
	The result of merging two branches together is that one is added to the other. Which allows two people to work on the same project at the same time. 